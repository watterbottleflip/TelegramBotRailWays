import psycopg2
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

bot = Bot(token="YOUR_TOKEN")
dp = Dispatcher(bot, storage=MemoryStorage())

class TrainInfoForm(StatesGroup):
    TRAIN_NUMBER = State()
    DEPARTURE_TIME = State()
    DEPARTURE = State()
    DESTINATION = State()
    DELETE_CONFIRM = State()


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.reply(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –≠—Ç–æ—Ç –±–æ—Çü§ñ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –≤–∞—à–∏—Ö –∂–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω—ã—Ö –ø—É—Ç—è—Ö\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                        f"‚ÑπÔ∏è/start_to_save - –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –∑–∞–ø–∏—Å–∏\n"
                        f"Ô∏èüëÅÔ∏è/view - –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π\n"
                        f"üóëÔ∏è/delete - –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π\n"
                        f"üö´/cancel - –¥–ª—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –ª—é–±–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"
                        )
    

@dp.message_handler(commands=['start_to_save'])
async def start_to_save(message: types.Message):
    await message.reply("–î–ª—è –æ—Ç–º–µ–Ω—ã —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel.")
    await message.reply("üöÜ–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–µ–∑–¥–∞üöÜ:")
    await TrainInfoForm.TRAIN_NUMBER.set()


@dp.message_handler(commands=['cancel'], state=TrainInfoForm.TRAIN_NUMBER)
async def cancel_start_to_save(message: types.Message, state: FSMContext):
    await state.finish()
    await message.reply("–î–µ–π—Å—Ç–≤–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å–Ω–æ–≤–∞, –∏—Å–ø–æ–ª—å–∑—É—è –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.")


@dp.message_handler(lambda message: message.text.startswith('/'), state=TrainInfoForm.TRAIN_NUMBER)
async def handle_commands_in_start_to_save(message: types.Message, state: FSMContext):
    await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã.")


@dp.message_handler(state=TrainInfoForm.TRAIN_NUMBER)
async def input_train_number(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['train_number'] = message.text
    await message.reply("üïñ–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú)üïñ:")
    await TrainInfoForm.DEPARTURE_TIME.set()


@dp.message_handler(state=TrainInfoForm.DEPARTURE_TIME)
async def input_departure_time(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['departure_time'] = message.text
    await message.reply("üöâ–í–≤–µ–¥–∏—Ç–µ –ø—É–Ω–∫—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:üöâ")
    await TrainInfoForm.DEPARTURE.set()


@dp.message_handler(state=TrainInfoForm.DEPARTURE)
async def input_departure(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['departure'] = message.text
    await message.reply("üöâ–í–≤–µ–¥–∏—Ç–µ –ø—É–Ω–∫—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—èüöâ:")
    await TrainInfoForm.DESTINATION.set()


@dp.message_handler(state=TrainInfoForm.DESTINATION)
async def input_destination(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['destination'] = message.text
        train_number = data['train_number']
        departure_time = data['departure_time']
        departure = data['departure']
        destination = data['destination']

        conn = psycopg2.connect(database="your_database", user="your_usename", password="your+passwaord", host="your_host")
        cursor = conn.cursor()
        cursor.execute("INSERT INTO trains (train_number, departure_time, departure, destination) VALUES (%s, %s, %s, %s)",
                       (train_number, departure_time, departure, destination))
        conn.commit()
        conn.close()

        await message.reply(f"üöÜ–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–µ–∑–¥–µ {train_number} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
        await state.finish()


@dp.message_handler(commands=['cancel'], state='*')
async def cancel_handler(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return

    await state.finish()
    # –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Ç–æ–º, —á—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ.
    await message.reply("–î–µ–π—Å—Ç–≤–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å–Ω–æ–≤–∞, –∏—Å–ø–æ–ª—å–∑—É—è –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.")


@dp.message_handler(commands=['view'])
async def view_data(message: types.Message):
    conn = psycopg2.connect(database="your_database", user="your_usename", password="your+passwaord", host="your_host")
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM trains")
    rows = cursor.fetchall()
    conn.close()

    if not rows:
        await message.reply("–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–µ–∑–¥–∞—Ö.")
    else:
        response = "–î–∞–Ω–Ω—ã–µ –æ üöÜ–ø–æ–µ–∑–¥–∞—Ö üöÜ–≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n"
        for row in rows:
            response += f"üöÜ–ù–æ–º–µ—Ä –ø–æ–µ–∑–¥–∞üöÜ: {row[1]}\nüïñ–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—èüïñ: {row[2]}\nüöâ–ü—É–Ω–∫—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—èüöâ: {row[3]}\nüöâ–ü—É–Ω–∫—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—èüöâ: {row[4]}\n\n"
        await message.reply(response)


@dp.message_handler(commands=['delete'])
async def delete_data_start(message: types.Message):
    await message.reply("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–µ–∑–¥–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å:")
    await TrainInfoForm.DELETE_CONFIRM.set()


@dp.message_handler(lambda message: not message.text.startswith('/'), state=TrainInfoForm.DELETE_CONFIRM)
async def delete_data_confirm(message: types.Message, state: FSMContext):
    train_number = message.text

    conn = psycopg2.connect(database="RailWays", user="postgres", password="Admin1234", host="localhost")
    cursor = conn.cursor()
    cursor.execute("DELETE FROM trains WHERE train_number = %s", (train_number,))
    conn.commit()
    conn.close()

    await message.reply(f"–î–∞–Ω–Ω—ã–µ –æ –ø–æ–µ–∑–¥–µ —Å –Ω–æ–º–µ—Ä–æ–º {train_number} –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.")
    await state.finish()


if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
